{"name":"Mixprocessing","tagline":"Live Mixing of Processing Sketches","body":"#![MixProcessing Logo](https://github.com/itschleemilch/MixProcessing/raw/master/images/MixProcessing-Logo_48x48.png) MixProcessing\r\n\r\nThis project aims to mix [Processing](http://www.processing.org/) sketches live (also called [VJing](http://en.wikipedia.org/wiki/VJing)). \r\n\r\n##What is MixProcessing?\r\n>MixProcessing can be used for VJing Processing sketches. The user defines output channels, which are free ediable areas on a output devices. The sketches can be controlled to render to any of the devices. A mixer let you control the output. Later there is a common interface for sketches planned, to set parameters (colors, speed, etc.) within MixProcessing live.\r\n\r\nThe technique of output channels also can be used to create [mapping](http://en.wikipedia.org/wiki/Projection_mapping) ([example 1](http://www.vjseptum.com/wp-content/uploads/2013/01/Coliseum_VO_003.jpg)).\r\n\r\nMixProcessing handels compiled Processing sketches, they have to be exported.\r\n\r\n##Dependencies\r\nThe project needs the Processing core library.\r\n\r\n##Status\r\nCurrently there is a tech demo, that loades all sketches from a subfolder and renders them into a divided frame. Sketches have to use Java2D, P2D or P3D does not work.\r\n\r\n![Demonstration of the current codebase](https://github.com/itschleemilch/MixProcessing/raw/master/images/2014-08-12_tech_demo.jpg)\r\n\r\nRather than just divide the area into equal rectangles the current codebase of the tech demo also would allow free forms (circles, stars, etc.), but this will be made accessable later.\r\n\r\n##Roadmap\r\n* Building an interface for editing the channels\r\n* Building a mixer interface\r\n* Define software interface for sketch-settings\r\n* Build interface for editing sketch-settings\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}